<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Divyas-MacBook-Air.local" failures="0" tests="8" name="herokuappWithPOJO.TC001" time="2.882" errors="1" timestamp="2023-09-01T11:55:45 CEST" skipped="7">
  <testcase classname="herokuappWithPOJO.TC001" name="ping" time="2.882">
    <error message="class &quot;org.hamcrest.Matchers&quot;&#039;s signer information does not match signer information of other classes in the same package" type="java.lang.SecurityException">
      <![CDATA[java.lang.SecurityException: class "org.hamcrest.Matchers"'s signer information does not match signer information of other classes in the same package
at java.base/java.lang.ClassLoader.checkCerts(ClassLoader.java:1156)
at java.base/java.lang.ClassLoader.preDefineClass(ClassLoader.java:900)
at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1008)
at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:855)
at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:753)
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:676)
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:634)
at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:182)
at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at herokuappWithPOJO.TC001.ping(TC001.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- ping -->
  <system-out/>
  <testcase classname="herokuappWithPOJO.TC001" name="createBooking" time="0.000">
    <skipped/>
  </testcase> <!-- createBooking -->
  <system-out/>
  <testcase classname="herokuappWithPOJO.TC001" name="getBooking" time="0.000">
    <skipped/>
  </testcase> <!-- getBooking -->
  <system-out/>
  <testcase classname="herokuappWithPOJO.TC001" name="getBookingIds" time="0.000">
    <skipped/>
  </testcase> <!-- getBookingIds -->
  <system-out/>
  <testcase classname="herokuappWithPOJO.TC001" name="partialUpdate" time="0.000">
    <skipped/>
  </testcase> <!-- partialUpdate -->
  <system-out/>
  <testcase classname="herokuappWithPOJO.TC001" name="generateToken" time="0.000">
    <skipped/>
  </testcase> <!-- generateToken -->
  <system-out/>
  <testcase classname="herokuappWithPOJO.TC001" name="deleteBooking" time="0.000">
    <skipped/>
  </testcase> <!-- deleteBooking -->
  <system-out/>
  <testcase classname="herokuappWithPOJO.TC001" name="updateBooking" time="0.000">
    <skipped/>
  </testcase> <!-- updateBooking -->
  <system-out/>
</testsuite> <!-- herokuappWithPOJO.TC001 -->
